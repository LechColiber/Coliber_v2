<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="logoPictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        N1jfgikAAAAASUVORK5CYII=
</value>
  </data>
</root>